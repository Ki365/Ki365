version: '3'

tasks:
  check:
    desc: Checks all dependencies are installed
    cmds:
      - task --version
      - go version
      - docker --version
      - yarn --version

  dev:
    desc: Runs the development server
    cmds:
      - task dev-frontend &
      - go run ./server/

  setup:
    desc: Setup development environment
    cmds:
      - git submodule update --init --progress
      - go run ./scripts/setup
      - go run ./scripts/examples

  dev-frontend:
    desc: Runs the development frontend
    dir: './frontend'
    cmds: 
      - yarn
      - yarn dev

  dev-backend-api:
    desc: Runs the development backend (api)
    cmds: 
      - go run ./server/

  dev-backend-kicad:
    desc: Runs the development backend (kicad)
    cmds:
      - docker compose run kicad

  build-frontend:
    desc: builds the frontend for production
    dir: './frontend'
    cmds:
      - yarn build 

  build-server:
    desc: Builds the server for production
    cmds:
      - go build -o ki365 -ldflags="-s -w" -trimpath ./server/

  build-server-cross:
    desc: Builds the server for multiple platforms (Linux, Windows, macOS)
    cmds:
      - GOOS=linux GOARCH=amd64 go build -o ki365-linux-amd64 -ldflags="-s -w" -trimpath ./server/
      - GOOS=windows GOARCH=amd64 go build -o ki365-windows-amd64.exe -ldflags="-s -w" -trimpath ./server/
      - GOOS=darwin GOARCH=amd64 go build -o ki365-darwin-amd64 -ldflags="-s -w" -trimpath ./server/
      - GOOS=darwin GOARCH=arm64 go build -o ki365-darwin-arm64 -ldflags="-s -w" -trimpath ./server/
      # Create universal binary for macOS (requires lipo on macOS)
      - |
        if command -v lipo >/dev/null 2>&1; then
          lipo -create -output ki365-darwin-universal ki365-darwin-amd64 ki365-darwin-arm64
          echo "Created universal binary: ki365-darwin-universal"
        else
          echo "lipo not found - skipping universal binary creation"
        fi 

  build-git:
    desc: Build the static git binary dependency
    dir: './bin'
    cmds:
      - docker compose build git
      - docker rm tc || true
      - docker cp $(docker create --name tc ki365-git:latest --sleep 10):/libexec/git-core/git-http-backend . && docker rm tc
      - docker cp $(docker create --name tc ki365-git:latest --sleep 10):/libexec/git-core/git-http-backend.dbg . && docker rm tc
      # NOTE: To verify version uncomment this line and run ./bin/git --version
      # - docker cp $(docker create --name tc ki365-ki365-git:latest --sleep 10):/bin/git . && docker rm tc
  build-gltfpack:
    desc: Build and copy the gltfpack dependency
    dir: './bin'
    cmds:
      - docker compose build gltfpack
      - docker rm tc || true
      - docker cp $(docker create --name tc ki365-gltfpack:latest --sleep 10):/gltfpack . && docker rm tc
      - docker cp $(docker create --name tc ki365-gltfpack:latest --sleep 10):/gltfpack.dbg . && docker rm tc
  copy-bin:
    desc: Builds and copies executables from utility docker images for development
    dir: '.'
    deps: [build-git, build-gltfpack]

  check-binaries:
    desc: Check binary architectures and file types
    cmds:
      - |
        echo "Checking binary architectures:"
        for binary in ki365-*; do
          if [ -f "$binary" ]; then
            echo "$binary:"
            file "$binary"
          fi
        done
