/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
Command: npx gltfjsx@6.2.18 ../../../public/interf.glb -t -T 
Files: ../../../public/interf.glb [1.16MB] > /home/christian/Code/GitHub/Ki365/Ki365/frontend/src/components/gltf/interf-transformed.glb [54.32KB] (95%)
Pcb_name: interf_u
Source_pcb_file: interf_u.glb
Generator: KiCad 8.0.3
Generated_at: 2024-06-20T20:53:40-0700
*/

import * as THREE from 'three'
import React, { useRef } from 'react'
import { useGLTF } from '@react-three/drei'
import { GLTF } from 'three-stdlib'

type GLTFResult = GLTF & {
  nodes: {
    ['=>0112']: THREE.Mesh
  }
  materials: {
    mat_0: THREE.MeshStandardMaterial
  }
  animations: GLTFAction[]
}

type ContextType = Record<string, React.ForwardRefExoticComponent<JSX.IntrinsicElements['mesh']>>

export function Model(props: JSX.IntrinsicElements['group']) {
  const { nodes, materials } = useGLTF('/interf-transformed.glb') as GLTFResult
  return (
    <group {...props} dispose={null}>
      <mesh geometry={nodes['=>0112'].geometry} material={materials.mat_0} />
    </group>
  )
}

useGLTF.preload('/interf-transformed.glb')
